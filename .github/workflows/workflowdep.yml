name: Angular GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: revdep
  GKE_CLUSTER: angular-gke-sample
  GKE_ZONE: us-central1
  IMAGE: angular-gke-sample
  TAG: 0.0.1
  DEPLOYMENT_NAME: angular-gke-sample

jobs:
  build-and-deploy:
    name: Build and Deploy Angular App to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '20'
          check-latest: true

      - name: Install Angular CLI and dependencies
        run: |
          npm install -g @angular/cli
          npm install

      - name: Build Angular App
        run: npm run build

      - name: Setup Google Cloud CLI
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.GET_GKE_CRED_SA_KEY_JSON }}
          project_id: ${{ secrets.GET_GKE_CRED_PROJECT }}

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build Docker Image
        run: |
          docker build --tag gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:0.0.1 .

      - name: Push Docker Image to GCR
        run: |
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:0.0.1

      - name: Set Google Cloud Project ID and Get GKE Credentials
        run: gcloud config set project $PROJECT_ID && gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Install gke-gcloud-auth-plugin
        run: gcloud components install kubectl

      - name: Apply Kubernetes Deployment
        run: |
          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:0.0.1
          ./kustomize build . | kubectl apply -f -
          kubectl apply -f deployment.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide